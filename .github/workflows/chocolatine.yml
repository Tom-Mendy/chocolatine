name: chocolatine
run-name: ${{ github.actor }} asking for main action
on:
  push:
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches-ignore:
      - 'ga-ignore-*'
jobs:

  check_coding_style:
    runs-on: ubuntu-latest
    name: check_coding_style
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:

      - name: Checkout GH repository
        uses:  actions/checkout@v3
        with:
          repository: ''

      - name: run conding-style.sh
        run: check.sh . /tmp/

      - name: Display banana report
        run: cat /tmp/coding-style-reports.log


      - name: report banana result
        run: |
          NB_ERROR=$(cat /tmp/coding-style-reports.log | wc -l)
          if [ $NB_ERROR -gt 0 ]; then
            ERRORS=$(cat /tmp/coding-style-reports.log);
              echo "Banana found $NB_ERROR error(s)"
              echo "$ERRORS"
              exit 1
          fi
          echo "Everything is good ! Keep on coding !"
          exit 0

  check_program_compilation:
    name: check_program_compilation
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container:
      image: epitechcontent/epitest-docker:latest
    needs: [check_coding_style]
    steps:

      - name: Checkout GH repository
        uses: actions/checkout@v3
        with:
          repository: ''

      - name: Compile project
        run: make

      - name: Clean project
        run: make clean

      - name: Check executables
        run: |
          for file in $EXECUTABLES; do
            if [ ! -x "$file" ]; then
                echo "File $file does not exist or is not executable"
                exit 1
            fi
          done

  run_tests:
    name: run_tests
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container:
      image: epitechcontent/epitest-docker:latest
    needs: [check_program_compilation]
    steps:

      - name: Checkout GH repository
        uses: actions/checkout@v3
        with:
          repository: ''

      - name: Compile project
        run: make tests_run

  push_to_mirror:
    name: push_to_mirror
    runs-on: ubuntu-latest
    needs: [run_tests]
    env:
      MIRROR_URL : git@github.com:EpitechPromo2027/B-DOP-200-BDX-2-1-chocolatine-tom.mendy.git

    steps:

      - name: Checkout GH repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.GITLAB_SSH_PRIVATE_KEY }}
