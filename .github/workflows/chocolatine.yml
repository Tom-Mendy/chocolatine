name: chocolatine
run-name: ${{ github.actor }} asking for main action
on:
  push:
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches-ignore:
      - 'ga-ignore-*'
jobs:

  check_coding_style:
    runs-on: ubuntu-latest
    name: check_coding_style
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:

      - name: Checkout GH repository
        uses:  actions/checkout@master
        with:
          repository: ''

      - name: run conding-style.sh
        run: check.sh . /tmp/

      - name: Display banana report
        run: |
          while read -r line; do
              file=$(echo "$line" | cut -d: -f1)
              line_number=$(echo "$line" | cut -d: -f2)
              message=$(echo "$line" | cut -d: -f3-)

              echo "::error file=$file,line=$line_number::$(echo "$message" | sed 's/"/\\"/g')"
          done < <(docker run --rm -v "$(pwd):/app" ghcr.io/epitech/coding-style-checker:latest check.sh $(pwd) $(pwd) 2>&1 | grep -E "^./")



      - name: report banana result
        run: |
          set -e

          while read -r line; do
              file=$(echo "$line" | cut -d: -f1)
              line_number=$(echo "$line" | cut -d: -f2)
              message=$(echo "$line" | cut -d: -f3-)

              echo "::error file=$file,line=$line_number::$(echo "$message" | sed 's/"/\\"/g')"
          done < <(docker run --rm -v "$(pwd):/app" ghcr.io/epitech/coding-style-checker:latest check.sh $(pwd) $(pwd) 2>&1 | grep -E "^./")


  check_program_compilation:
    name: check_program_compilation
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    needs: [check_coding_style]
    steps:

      - name: Checkout GH repository
        uses: actions/checkout@master
        with:
          repository: ''

      - name: Compile project
        run: timeout 2m make

      - name: Clean project
        run: make cleans
