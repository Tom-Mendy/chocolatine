name: chocolatine
run-name: ${{ github.actor }} asking for main action
on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'
jobs:

  check_coding_style:
    runs-on: ubuntu-latest
    name: check_coding_style
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:

      - name: Checkout GH repository
        uses:  actions/checkout@v3
        with:
          repository: ''

      - name: run conding-style.sh
        run: check.sh . /tmp/

      - name: Display banana report
        run: cat /tmp/coding-style-reports.log

      - name: Create annotation for conding style report
        run: |
          input="/tmp/coding-style-reports.log"
          while IFS= read line
          do
            echo "::error file=$line,line=1::Missing semicolon"
          done < "$input"

  check_program_compilation:
    name: check_program_compilation
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container:
      image: epitechcontent/epitest-docker:latest
    needs: [check_coding_style]
    steps:

      - name: Checkout GH repository
        uses: actions/checkout@v3
        with:
          repository: ''

      - name: Compile project
        run: make

      - name: Clean project
        run: make clean

      - name: Check executables
        run: |
          for file in ${{ vars.EXECUTABLES }}; do
            if [ ! -x "$file" ]; then
                echo "File $file does not exist or is not executable"
                exit 1
            fi
          done

  run_tests:
    name: run_tests
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container:
      image: epitechcontent/epitest-docker:latest
    needs: [check_program_compilation]
    steps:

      - name: Checkout GH repository
        uses: actions/checkout@v3
        with:
          repository: ''

      - name: Compile project
        run: make tests_run

  push_to_mirror:
    name: push_to_mirror
    runs-on: ubuntu-latest
    needs: [run_tests]
    if: github.event_name == 'push'
    steps:

      - name: Checkout GH repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Push to mirror repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ vars.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.GITLAB_SSH_PRIVATE_KEY }}
